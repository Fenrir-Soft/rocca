---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import type { InferEntrySchema } from "astro:content";

export async function getStaticPaths() {
    const cidades_collection = await getCollection("cidades");
    const cidades = cidades_collection.map(({ data }) => data);

    

    return cidades.map((cidade) => ({
        params: {
            cidade_slug: cidade.slug,
        },
        props: {
            cidade,
        },
    }));
}

const { cidade } = Astro.props;

cidade.bairros.sort((a, b) => (a.slug < b.slug ? -1 : 1));

let max_chars =
    cidade.bairros.reduce((acc, bairro) => {
        return Math.max(acc, bairro.titulo.length);
    }, 0) + "ch";
---

<BaseLayout>
    <section>
        <div class="container raleway">
            <ul class="bread-crumbs">
                <li v-for="item in items">Início</li>
                <li v-for="item in items">{cidade.titulo} - {cidade.uf}</li>
                <li v-for="item in items">Bairros</li>
            </ul>
        </div>
    </section>
    <section>
        <div class="container raleway">
            <h3>
                <strong>Bairros de {cidade.titulo}</strong>
            </h3>
            <p class="text-center">
                Encontre o seu Imóvel Pesquisando pelos Principais Bairros de {cidade.titulo}
            </p>
            <ul class="grid">
                {
                    cidade.bairros.map((bairro) => (
                        <li>
                            <a href={`bairro/${bairro.slug}`}>{bairro.titulo}</a>
                        </li>
                    ))
                }
            </ul>
        </div>
    </section>
</BaseLayout>
<style lang="less" define:vars={{ max_chars }}>
    ul.bread-crumbs {
        list-style: none;
        margin: 0;
        padding: 0;
        padding-top: 2.5em;
        padding-bottom: 1em;

        li {
            display: inline;

            &::after {
                content: ">";
                margin-left: 1em;
                margin-right: 1em;
            }

            &:last-child {
                &::after {
                    content: "";
                    margin: 0;
                }

                font-weight: 500;
            }
        }
    }

    ul.grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(var(--max_chars), 1fr));
        grid-gap: 0.5rem 2rem;
        list-style: none;
        margin: 0;
        padding: 0;
        margin-top: 2em;
        li {
            a {
                display: flex;
                background-color: #f2f2f2;
                color: #333333;
                text-transform: uppercase;
                font-size: 0.75rem;
                justify-content: center;
                padding: 1em 2em;
            }
        }
    }

    h3 {
        font-weight: normal;
        font-size: 1.5rem;
        color: #4e4d4f;
        text-align: center;
        margin: 0;
        margin-top: 4.5rem;
    }

    .mt-4 {
        margin-top: 4em;
    }

    .text-center {
        text-align: center;
    }
</style>
