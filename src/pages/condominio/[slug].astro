---
import BaseLayout from "../../layouts/BaseLayout.astro";
import FotosInterna from "../../components/FotosInterna.astro";

import { getCollection } from "astro:content";
import { cdn_service } from "../../api/cdn";
import { v7 } from "uuid";
import BoxDiferenciais from "../../components/BoxDiferenciais.astro";

export async function getStaticPaths() {
  const records = await getCollection("condominios");
  return records.map((entry) => {
    return {
      params: {
        slug: entry.data.slug,
      },
      props: {
        condominio: entry.data,
      },
    };
  });
}

const { condominio } = Astro.props;
const imagens = (
  await getCollection("condominio_imagens", (data) => {
    return Number(data.data.condominio_id) === Number(condominio.id);
  })
).map(({ data }) => data);

//const imagens = await condominio_arquivo_repository.getByCondominioId(condominio.id)

const arquivos = imagens || [];

arquivos.sort((a, b) => {
  return a.destaque && !b.destaque ? 1 : -1;
});

const imagens_processadas = await Promise.all(
  arquivos.map(async (record) => {
    const image_cdn = await cdn_service.save({
      id: `${v7()}`,
      bucket: "condominio",
      hash: `${record.condominio_id}`,
      caption: record.titulo,
      type: "image/jpg",
      url: `${record.path}`,
      height: 0,
      width: 0,
      size: record.size,
    });
    return {
      ...record,
      image_cdn,
    };
  }),
);

let [destaque, ...outras] = imagens_processadas;
//outras = []
---

<BaseLayout>
  <FotosInterna destaque={destaque} outras={outras} />
  <section class="raleway">

    <div class="container">
      <h2>
        {condominio.titulo}
      </h2>

      {condominio.descricao!= '' && (
        <div>
          <h2>Descrição</h2>
          {condominio.descricao}
        </div>
      )}

        <BoxDiferenciais title="Diferenciais" diferenciais={condominio.diferenciais}></BoxDiferenciais>
      
    </div>
  </section>
</BaseLayout>