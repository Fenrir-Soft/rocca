---
import IconLupa from "../../assets/images/icons/lupa.svg?raw";
import IconChevronDown from "../../assets/images/icons/chevron-down.svg?raw";
import Icon from "../icon.astro";
import DialogTipos from "./DialogTipos.astro";
import DialogBairros from "./DialogBairros.astro";
import { db } from "../../db";

const faixas_de_valor = await db
    .selectFrom("faixavalor")
    .selectAll()
    .where("deleted", "=", false)
    .orderBy("valor asc")
    .execute();
---

<div class="box-filtros">
    <ul>
        <li>
            <a href="#dialog-tipos" class="raleway" role="button">
                Tipos
                <Icon icon={IconChevronDown} />
            </a>
            <DialogTipos />
        </li>
        <li>
            <a
                href="#dialog-bairros"
                role="button"
                class="raleway"
                type="button"
            >
                Bairros
                <Icon icon={IconChevronDown} />
            </a>
            <DialogBairros />
        </li>
        <li>
            <select class="filtro-valor" name="valor_de">
                <option value="0">Valor de</option>
                {
                    faixas_de_valor.map((row) => (
                        <option value={row.valor} class={row.finalidade}>
                            {row.valor.toLocaleString("pt-BR", {
                                style: "currency",
                                currency: "BRL",
                                maximumFractionDigits: 0,
                            })}
                        </option>
                    ))
                }
                <option></option>
            </select>
        </li>
        <li>
            <select class="filtro-valor" name="valor_ate">
                <option value="0">Valor até</option>
                {
                    faixas_de_valor.map((row) => (
                        <option value={row.valor} class={row.finalidade}>
                            {row.valor.toLocaleString("pt-BR", {
                                style: "currency",
                                currency: "BRL",
                                maximumFractionDigits: 0,
                            })}
                        </option>
                    ))
                }
                <option></option>
            </select>
        </li>
    </ul>
    <button type="submit" title="Buscar">
        <Icon icon={IconLupa} />
    </button>
</div>

<style lang="less" scoped>
    .box-filtros {
        background-color: #000c39;
        display: flex;
        padding: 0.5em;
        border-radius: 0.6em;
        button[type="submit"] {
            padding: 1em 1.5em;
            background-color: #52555a;
            border-radius: 0.75em;
            border: 0;
            cursor: pointer;
        }
        ul {
            padding: 0;
            margin: 0;
            display: flex;
            flex-grow: 1;
            margin-right: 1em;
            li {
                flex-grow: 1;
                list-style: none;
                display: flex;

                a[role="button"] {
                    cursor: pointer;
                    background-color: transparent;
                    width: 100%;
                    color: white;
                    font-size: 1em;
                    font-weight: 500;
                    border: none;

                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    padding-left: 0.5em;
                    padding-right: 1em;
                    svg {
                        margin-top: -5px;
                    }
                }
                position: relative;

                .filtro-valor {
                    width: 100%;
                    background-color: transparent;
                    color: white;
                    border: none;
                    padding: 0 0.25em;
                    font-size: 1rem;
                    &::placeholder {
                        color: white;
                        font-size: 1rem;
                    }
                    & option {
                        color: #000c39;
                    }
                }
            }
        }
    }

    @media (max-width: 55em) {
        .box-filtros {
            max-width: 90vw;

            ul {
                flex-direction: column;
                margin-bottom: 1em;
                li {
                    padding: 1em 0;
                    a[role="button"] {
                        padding-right: 0;
                    }
                }
            }
            flex-direction: column;
        }
    }
</style>
<script>
    let $inputs = Array.from(
        document.querySelectorAll("[name=finalidade]")
    ) as HTMLInputElement[];
    const updateValores = () => {
        const $input = document.querySelector('[name=finalidade]:checked') as HTMLInputElement
        const finalidade = $input.value;
        let className = "Condomínios";
        switch (finalidade) {
            case "alugar":
                className = "Alugar";
                break;
            case "comprar":
                className = "Comprar";
            default:
                break;
        }

        let $options = Array.from(
            document.querySelectorAll(".filtro-valor > option")
        ) as HTMLOptionElement[];
        for (let $option of $options) {
            $option.style.display = "none";
            if ($option.classList.contains(className)) {
                $option.style.display = "unset";
            }
        }
    };
    for (let $input of $inputs) {
        $input.addEventListener("change", () => {
            updateValores()
        });
    }
    updateValores()

</script>
